SP <- c("Rot","Spi","Ble","Pca","Col","Chi","Tet","Other") #comm matrix
ENV <- c("day","Size","dist.outlet","Treatment","Treat.Size") #Constrains
CONT <- c("bact.green") #Effect to partial out
#Filter data as wanted (for bacteria need to use only rep A and B)
X <- data %>%
filter(day!=0 & Replicate %in% c("A","B","C","D")) %>%
mutate(Treatment = as.numeric(as.factor(Treatment)))
#Create matrices for analyses
C <- decostand(X[,SP],"hell")
E <- as.matrix(X[,ENV])
Z <- as.matrix(X[,CONT])
########## REDUNDANCY ANALYSIS (RDA)
rda.mod <- rda(C ~ ., as.data.frame(E))
rda.mod
anova(rda.mod,by="terms",permu=200)
data$Treat.Size <- interaction(data$Treatment,data$Size)
data$Treat.Size.Day <- interaction(data$Treatment,data$Size,data$day)
#Place vars of interest into vectors for each component of ordination
SP <- c("Rot","Spi","Ble","Pca","Col","Chi","Tet","Other") #comm matrix
ENV <- c("day","centrality","Size","dist.outlet","Treatment","Treat.Size","Treat.Size.Day") #Constrains
CONT <- c("bact.green") #Effect to partial out
#Filter data as wanted (for bacteria need to use only rep A and B)
X <- data %>%
filter(day!=0 & Replicate %in% c("A","B","C","D")) %>%
mutate(Treatment = as.numeric(as.factor(Treatment)))
#Create matrices for analyses
C <- decostand(X[,SP],"hell")
E <- as.matrix(X[,ENV])
Z <- as.matrix(X[,CONT])
########## REDUNDANCY ANALYSIS (RDA)
rda.mod <- rda(C ~ ., as.data.frame(E))
rda.mod
anova(rda.mod,by="terms",permu=200)
ordiplot(rda.mod,display="site",type="n")
points(rda.mod, display="site", cex=0.5,pch=c(16, 17)[X$Treatment],col=colvec[as.factor(X$day)])
data$Treat.Size
library(RColorBrewer)
?brewer.pal()
length(nlevels(X$Treat.Size))
nlevels(X$Treat.Size)
test <- display.brewer.all(nlevels(X$Treat.Size),)
test <- brewer.pal(nlevels(X$Treat.Size),"Dark2")
test
colvec <- brewer.pal(nlevels(X$Treat.Size),"Dark2")
ordiplot(rda.mod,display="site",type="n")
points(rda.mod, display="site", cex=0.5,pch=c(16, 17)[X$Treatment],col=colvec[X$Treat.Size])
anova(rda.mod,by="terms",permu=200)
SP <- c("Rot","Spi","Ble","Pca","Col","Chi","Tet","Other") #comm matrix
ENV <- c("day","centrality","Size","dist.outlet","Treatment","Treat.Size","Treat.Size.Day") #Constrains
CONT <- c("Replicate") #Effect to partial out
#Filter data as wanted (for bacteria need to use only rep A and B)
X <- data %>%
filter(day!=0 & Replicate %in% c("A","B","C","D")) %>%
mutate(Treatment = as.numeric(as.factor(Treatment)))
#Create matrices for analyses
C <- decostand(X[,SP],"hell")
E <- as.matrix(X[,ENV])
Z <- as.matrix(X[,CONT])
rda.mod <- rda(C ~ X$Treatment + X$Size + X$Treat.Size + X$Treat.Size.Day + X$centrality +  X$dist.outlet + Condition(Z))
rda.mod
anova(rda.mod,by="terms",permu=200)
rda.mod <- rda(C ~ X$Treatment + X$Size + X$Treat.Size + X$Treat.Size.Day + X$centrality +  X$dist.outlet + X$day + Condition(Z))
rda.mod
head(E)
X <- data %>%
filter(day!=0 & Replicate %in% c("A","B","C","D")) #%>%
C <- decostand(X[,SP],"hell")
E <- as.matrix(X[,ENV])
Z <- as.matrix(X[,CONT])
head(E)
rda.mod <- rda(C ~ ., as.data.frame(E))
rda.mod <- rda(C ~ X$Treatment + X$Size + X$Treat.Size + X$Treat.Size.Day + X$centrality +  X$dist.outlet + X$day + Condition(Z))
rda.mod
head(E)
E$dist.outlet
X$Size
rda.mod <- rda(C ~ X$Treatment + X$Size + X$Treat.Size + X$Treat.Size.Day + X$centrality +  X$dist.outlet + X$day + Condition(Z))
anova(rda.mod,by="terms",permu=200)
rda.mod <- rda(C ~ X$Treatment + as.factor(X$Size) + X$Treat.Size + X$Treat.Size.Day + X$centrality +  X$dist.outlet + X$day + Condition(Z))
anova(rda.mod,by="terms",permu=200)
X$day
rda.mod
rda.mod <- rda(C ~ ., as.data.frame(E))
rda.mod
anova(rda.mod,by="terms",permu=200)
X <- data %>%
filter(day!=0 & Replicate %in% c("A","B","C","D")) #%>%
head(X)
X <- data %>%
filter(day!=0 & Replicate %in% c("A","B","C","D")) #%>%
mutate(Treatment = as.factor(Treatment))
X <- data %>%
filter(day!=0 & Replicate %in% c("A","B","C","D")) %>%
mutate(Treatment = as.factor(Treatment))
head(X)
?as.factor()
C <- decostand(X[,SP],"hell")
E <- as.matrix(X[,ENV])
Z <- as.matrix(X[,CONT])
rda.mod <- rda(C ~ ., as.data.frame(E))
rda.mod
anova(rda.mod,by="terms",permu=200)
as.character(X$day)
as.numeric(as.character(X$day))
log(as.numeric(as.character(X$day)))
as.ordered(X$Size)
anova(rda.mod,by="terms",permu=200)
as.numeric(as.character(X$centrality))
SP <- c("Rot","Spi","Ble","Pca","Col","Chi","Tet","Other") #comm matrix
ENV <- c("day.cont","centrality","Size","dist.outlet","Treatment","Treat.Size","Treat.Size.Day") #Constrains
CONT <- c("day") #Effect to partial out
X <- data %>%
filter(day!=0 & Replicate %in% c("A","B","C","D")) %>%
mutate(Treatment = as.factor(Treatment),
day.cont = log(as.numeric(as.character(day))),
Size = as.ordered(Size),
centrality = as.numeric(as.character(centrality)),
dist.outlet = as.numeric(as.character(dist.outlet)))
C <- decostand(X[,SP],"hell")
E <- as.matrix(X[,ENV])
Z <- as.matrix(X[,CONT])
rda.mod <- rda(C ~ ., as.data.frame(E))
rda.mod
anova(rda.mod,by="terms",permu=200)
head(E)
E <- X[,ENV]
rda.mod <- rda(C ~ ., as.data.frame(E))
anova(rda.mod,by="terms",permu=200)
rda.mod
ENV <- c("day.cont","Size","dist.outlet","Treatment","Treat.Size","Treat.Size.Day") #Constrains
E <- X[,ENV]
rda.mod <- rda(C ~ ., as.data.frame(E))
anova(rda.mod,by="terms",permu=200)
ENV <- c("day.cont","centrality","Size","dist.outlet","Treatment","Treat.Size","Treat.Size.Day") #Constrains
SP <- c("Rot","Spi","Ble","Pca","Col","Chi","Tet","Other") #comm matrix
ENV <- c("day.cont","centrality","Size","dist.outlet","Treatment","Treat.Size","Treat.Size.Day") #Constrains
CONT <- c("day") #Effect to partial out
#Filter data as wanted (for bacteria need to use only rep A and B)
X <- data %>%
filter(day!=0 & Replicate %in% c("A","B","C","D")) %>%
mutate(Treatment = as.factor(Treatment),
day.cont = log(as.numeric(as.character(day))),
Size = as.ordered(Size),
centrality = as.numeric(as.character(centrality)),
dist.outlet = as.numeric(as.character(dist.outlet)))
#Create matrices for analyses
C <- decostand(X[,SP],"hell")
E <- X[,ENV]
C <- decostand(X[,SP],"hell")
E <- X[,ENV]
Z <- X[,CONT]
rda.mod <- rda(C ~ X$Treatment + X$Size + X$Treat.Size + X$Treat.Size.Day + X$centrality +  X$dist.outlet + X$day.cont + Condition(Z))
Z <- as.matrix(X[,CONT])
rda.mod <- rda(C ~ X$Treatment + X$Size + X$Treat.Size + X$Treat.Size.Day + X$centrality +  X$dist.outlet + X$day.cont + Condition(Z))
rda.mod
anova(rda.mod,by="terms",permu=200)
head(Z)
X <- data %>%
filter(day!=0 & Replicate %in% c("A","B","C","D")) %>%
mutate(Treatment = as.factor(Treatment),
day = as.factor(as.character(day)),
day.cont = log(as.numeric(as.character(day))),
Size = as.ordered(Size),
centrality = as.numeric(as.character(centrality)),
dist.outlet = as.numeric(as.character(dist.outlet)))
C <- decostand(X[,SP],"hell")
E <- X[,ENV]
Z <- as.matrix(X[,CONT])
head(Z)
rda.mod <- rda(C ~ X$Treatment + X$Size + X$Treat.Size + X$Treat.Size.Day + X$centrality +  X$dist.outlet + X$day.cont + Condition(Z))
rda.mod
anova(rda.mod,by="terms",permu=200)
rda.mod <- rda(C ~ ., as.data.frame(E))
rda.mod
anova(rda.mod,by="terms",permu=200)
head(E)
ordiplot(rda.mod,display="site",type="n")
text(rda.mod, display="cn", col="blue",cex=0.5)
?text()
?ordiplot()
ordiplot(rda.mod,display="site",type="n")
plot(rda.mod, add=TRUE,color="black")
?ordiarrows()
ordiplot(rda.mod,display="site",type="n")
ordiplot(rda.mod,display="site",type="n")
points(rda.mod, display="site", cex=0.5,pch=c(16, 17)[X$Treatment],col=colvec[X$Treat.Size])
colvec <- brewer.pal(nlevels(X$Treatment),"Dark2")
colvec
ordiplot(rda.mod,display="site",type="n")
points(rda.mod, display="site", cex=0.5,pch=16,col=colvec[X$Treat.Size])
points(rda.mod, display="site", cex=0.5,pch=16,col=colvec[X$Treatment])
ordiplot(rda.mod,display="site",type="n")
points(rda.mod, display="site", cex=0.5,pch=16,col=colvec[X$Treatment])
colvec <- brewer.pal(nlevels(as.factor(X$day)),"Dark2")
ordiplot(rda.mod,display="site",type="n")
points(rda.mod, display="site", cex=0.5,pch=16,col=colvec[X$Treatment])
colvec
ordiplot(rda.mod,display="site",type="n")
points(rda.mod, display="site", cex=0.5,pch=16,col=colvec[X$day])
points(rda.mod, display="cn", col="blue",cex=0.5)
text(rda.mod, display="cn", col="blue",cex=0.5)
ordiplot(rda.mod,display="site",type="n")
text(rda.mod, display="bp", col="blue",cex=0.5)
ordiplot(rda.mod,display="site",type="n")
text(rda.mod, display="cn", col="blue",cex=0.5)
ordiplot(rda.mod,display="site",type="n")
text(rda.mod, display="bp", col="blue",cex=0.5)
ordiplot(rda.mod,display="site",type="n")
text(rda.mod, display="cn", col="blue",cex=0.5)
ordiplot(rda.mod,display="site",type="n",scaling=3)
text(rda.mod, display="cn", col="blue",cex=0.5)
colvec <- brewer.pal(nlevels(as.factor(X$day)),"Dark2")
pchvec <- c(16,17,18)
ordiplot(rda.mod,display="site",type="n",scaling=3)
text(rda.mod, display="cn", col="blue",cex=0.5)
ordiplot(rda.mod,display="site",type="n",scaling=2)
text(rda.mod, display="cn", col="blue",cex=0.5)
ordiplot(rda.mod,display="site",type="n",scaling=1)
text(rda.mod, display="cn", col="blue",cex=0.5)
pchvec[X$Treatment]
pchvec <- c(16,17)
ordiplot(rda.mod,display="site",type="n",scaling=1)
text(rda.mod, display="cn", col="blue",cex=0.5)
points(rda.mod, display="site", cex=0.5,pch=pchvec[X$Treatment],col=colvec[X$day])
ordiplot(rda.mod,display="site",type="n",scaling=2)
text(rda.mod, display="cn", col="blue",cex=0.5)
points(rda.mod, display="site", cex=0.5,pch=pchvec[X$Treatment],col=colvec[X$day])
ordiplot(rda.mod,display="site",type="n",scaling=3)
text(rda.mod, display="cn", col="blue",cex=0.5)
points(rda.mod, display="site", cex=0.5,pch=pchvec[X$Treatment],col=colvec[X$day])
text(rda.mod, display="sp", col="blue",cex=1)
ordiplot(rda.mod,display="site",type="n")
text(rda.mod, display="cn", col="blue",cex=0.5)
points(rda.mod, display="site", cex=0.5,pch=pchvec[X$Treatment],col=colvec[X$day])
text(rda.mod, display="sp", col="blue",cex=1)
colvec <- brewer.pal(nlevels(as.factor(X$day)),"Dark2")
pchvec <- c(16,17)
ordiplot(rda.mod,display="site",type="n")
text(rda.mod, display="bp", col="blue",cex=0.5)
summary(rda.mod)
colvec <- brewer.pal(nlevels(as.factor(X$Treatment)),"Dark2")
pchvec <- c(16,17,21)
ordiplot(rda.mod,display="site",type="n")
text(rda.mod, display="cn", col="blue",cex=0.5)
points(rda.mod, display="site", cex=0.5,pch=pchvec[X$day],col=colvec[X$Treatment])
text(rda.mod, display="sp", col="blue",cex=1)
legend("bottomleft",legend=X$Treatment,col=colvec,pch=16,bty="n",cex=0.5)
colvec
colvec <- brewer.pal(nlevels(as.factor(X$Treatment)),"Dark2")
pchvec <- c(16,17,21)
ordiplot(rda.mod,display="site",type="n")
text(rda.mod, display="cn", col="blue",cex=0.5)
points(rda.mod, display="site", cex=0.5,pch=pchvec[X$day],col=colvec[X$Treatment])
text(rda.mod, display="sp", col="blue",cex=1)
legend("bottomleft",legend=levels(X$Treatment),col=colvec,pch=16,bty="n",cex=0.5)
legend("bottomleft",legend=levels(X$Treatment),col=colvec,pch=16,bty="n",cex=0.5)
legend("bottomright",legend=levels(X$day),pch=pchvec,bty="n",cex=0.5)
levels(X$day)
levels(as.ordered(X$day))
levels(X$day.cont)
levels(as.factor(X$day.cont))
data$day
?factor()
factor(X$day,levels=c("0","7","15","21","29"))
X <- data %>%
filter(day!=0 & Replicate %in% c("A","B","C","D")) %>%
mutate(Treatment = as.factor(Treatment),
day = factor(X$day,levels=c("0","7","15","21","29")),
day.cont = log(as.numeric(as.character(day))),
Size = as.ordered(Size),
centrality = as.numeric(as.character(centrality)),
dist.outlet = as.numeric(as.character(dist.outlet)))
#Create matrices for analyses
C <- decostand(X[,SP],"hell")
E <- X[,ENV]
Z <- as.matrix(X[,CONT])
########## REDUNDANCY ANALYSIS (RDA)
rda.mod <- rda(C ~ ., as.data.frame(E))
anova(rda.mod,by="terms",permu=200)
colvec <- brewer.pal(nlevels(as.factor(X$Treatment)),"Dark2")
pchvec <- c(16,17,21)
ordiplot(rda.mod,display="site",type="n")
points(rda.mod, display="site", cex=0.5,pch=pchvec[X$day],col=colvec[X$Treatment])
text(rda.mod, display="sp", col="blue",cex=1)
legend("bottomleft",legend=levels(X$Treatment),col=colvec,pch=16,bty="n",cex=0.5)
legend("bottomright",legend=as.factor(X$day.cont)),pch=pchvec,bty="n",cex=0.5)
legend("bottomright",legend=levels(X$day),pch=pchvec,bty="n",cex=0.5)
points(rda.mod, display="cn", col="blue",cex=0.5)
text(rda.mod, display="bp", col="blue",cex=0.5)
colvec <- brewer.pal(nlevels(as.factor(X$Treatment)),"Dark2")
pchvec <- c(16,17,21)
ordiplot(rda.mod,display="site",type="n")
text(rda.mod, display="cn", col="blue",cex=0.5)
points(rda.mod, display="site", cex=0.5,pch=pchvec[X$day],col=colvec[X$Treatment])
text(rda.mod, display="sp", col="blue",cex=1)
legend("bottomleft",legend=levels(X$Treatment),col=colvec,pch=16,bty="n",cex=0.5)
legend("bottomright",legend=levels(X$day),pch=pchvec,bty="n",cex=0.5)
text(5,2,labels = "Hellinger transformed",cex=0.5)
SP <- c("Rot","Spi","Ble","Pca","Col","Chi","Tet","Other") #comm matrix
ENV <- c("day.cont","centrality","Size","dist.outlet","Treatment") #Constrains
CONT <- c("day") #Effect to partial out
#Filter data as wanted (for bacteria need to use only rep A and B)
X <- data %>%
filter(day!=0 & Replicate %in% c("A","B","C","D")) %>%
mutate(Treatment = as.factor(Treatment),
day = factor(X$day,levels=c("0","7","15","21","29")),
day.cont = log(as.numeric(as.character(day))),
Size = as.ordered(Size),
centrality = as.numeric(as.character(centrality)),
dist.outlet = as.numeric(as.character(dist.outlet)))
#Create matrices for analyses
C <- decostand(X[,SP],"hell")
E <- X[,ENV]
Z <- as.matrix(X[,CONT])
########## REDUNDANCY ANALYSIS (RDA)
rda.mod <- rda(C ~ ., as.data.frame(E))
rda.mod
anova(rda.mod,by="terms",permu=200)
colvec <- brewer.pal(nlevels(as.factor(X$Treatment)),"Dark2")
pchvec <- c(16,17,21)
ordiplot(rda.mod,display="site",type="n")
text(rda.mod, display="cn", col="blue",cex=0.5)
points(rda.mod, display="site", cex=0.5,pch=pchvec[X$day],col=colvec[X$Treatment])
text(rda.mod, display="sp", col="blue",cex=1)
legend("bottomleft",legend=levels(X$Treatment),col=colvec,pch=16,bty="n",cex=0.5)
legend("bottomright",legend=levels(X$day),pch=pchvec,bty="n",cex=0.5)
SP <- c("Rot","Spi","Ble","Pca","Col","Chi","Tet","Other") #comm matrix
ENV <- c("day.cont","centrality","Size","dist.outlet","Treatment","Treat.Size","Treat.Size.Day") #Constrains
CONT <- c("day") #Effect to partial out
#Filter data as wanted (for bacteria need to use only rep A and B)
X <- data %>%
filter(day!=0 & Replicate %in% c("A","B","C","D")) %>%
mutate(Treatment = as.factor(Treatment),
day = factor(X$day,levels=c("0","7","15","21","29")),
day.cont = log(as.numeric(as.character(day))),
Size = as.ordered(Size),
centrality = as.numeric(as.character(centrality)),
dist.outlet = as.numeric(as.character(dist.outlet)))
#Create matrices for analyses
C <- decostand(X[,SP],"hell")
E <- X[,ENV]
Z <- as.matrix(X[,CONT])
########## REDUNDANCY ANALYSIS (RDA)
rda.mod <- rda(C ~ ., as.data.frame(E))
#rda.mod <- rda(C ~ X$Treatment + X$Size + X$Treat.Size + X$Treat.Size.Day + X$centrality +  X$dist.outlet + X$day.cont + Condition(Z))
rda.mod
anova(rda.mod,by="terms",permu=200)
data$Treat.Size <- interaction(data$Treatment,data$Size)
data$Treat.Day <- interaction(data$Treatment,data$day)
data$Treat.Size.Day <- interaction(data$Treatment,data$Size,data$day)
ENV <- c("day.cont","centrality","Size","dist.outlet","Treatment","Treat.Size","Treat.Size.Day","Treat.Day") #Constrains
CONT <- c("day") #Effect to partial out
#Filter data as wanted (for bacteria need to use only rep A and B)
X <- data %>%
filter(day!=0 & Replicate %in% c("A","B","C","D")) %>%
mutate(Treatment = as.factor(Treatment),
day = factor(X$day,levels=c("0","7","15","21","29")),
day.cont = log(as.numeric(as.character(day))),
Size = as.ordered(Size),
centrality = as.numeric(as.character(centrality)),
dist.outlet = as.numeric(as.character(dist.outlet)))
#Create matrices for analyses
C <- decostand(X[,SP],"hell")
E <- X[,ENV]
Z <- as.matrix(X[,CONT])
########## REDUNDANCY ANALYSIS (RDA)
rda.mod <- rda(C ~ ., as.data.frame(E))
anova(rda.mod,by="terms",permu=200)
head(E)
ordihull(rda.mod,groups=X$Treatment,show.groups=levels(X$Treatment),col=c("blue","green"),label=F,lwd=1,lty=1)
ordiplot(rda.mod,display="site",type="n")
ordihull(rda.mod,groups=X$Treatment,show.groups=levels(X$Treatment),col=c("blue","green"),label=F,lwd=1,lty=1)
?ordiplot()
ggplot(data=data,mapping=aes(x=as.factor(day),y=prot.ab)) +
geom_boxplot(mapping=aes(color=Treatment))
##################
#Load data in R environment
##################
library(tidyverse)
library(vegan)
library(png)
##################
#Directory paths
##################
to.data <- "./data/"
to.script <- "./scripts/"
to.output <- "./output/"
to.figs <- "./figs/"
to.R <- "./output/"
##################
#Load data in R environment
##################
data = readRDS(paste0(to.output,"cl.data.RDS"))
ggplot(data=data,mapping=aes(x=as.factor(day),y=prot.ab)) +
geom_boxplot(mapping=aes(color=Treatment))
ggplot(data=data,mapping=aes(x=as.factor(day),y=prot.rich)) +
geom_boxplot(mapping=aes(color=Treatment))
head(data)
mean(data$prot.rich[data$Landscape=="Isolated"])
mean(data$prot.rich[data$Landscape=="Isolated" & data$day=="29"])
mean(data$prot.rich[data$Treatment=="Isolated" & data$day=="29"])
sd(data$prot.rich[data$Treatment=="Isolated" & data$day=="29"])
ggplot(data=data,mapping=aes(x=Treatment,y=prot.rich)) +
geom_boxplot(mapping=aes(color=Treatment)) +
facet_wrap(~ day,nrow=2)
ggplot(data=data,mapping=aes(x=Treatment,y=prot.rich)) +
geom_boxplot(mapping=aes(color=Treatment)) +
facet_wrap(~ Size,nrow=2)
ggplot(data=data,mapping=aes(x=bact.blue,y=prot.ab)) +
geom_point(mapping=aes(color=Treatment)) +
facet_wrap(~ day,nrow=2)
ggplot(data=data,mapping=aes(x=bact.green,y=prot.ab)) +
geom_point(mapping=aes(color=Treatment)) +
facet_wrap(~ day,nrow=2)
ggplot(data=data,mapping=aes(x=bact.green,y=bact.blue)) +
geom_point(mapping=aes(color=Treatment)) +
facet_wrap(~ day,nrow=2)
ggplot(data=data,mapping=aes(x=bact.green,y=bact.blue)) +
geom_point(mapping=aes(color=Treatment)) +
facet_wrap(~ day,nrow=2)
ggplot(data=data,mapping=aes(x=bact.green,y=bact.blue)) +
geom_point(mapping=aes(color=Treatment)) +
facet_wrap(~ day,nrow=2)
ggplot(data=data,mapping=aes(x=bact.green,y=protist.ab)) +
geom_point(mapping=aes(color=Treatment)) +
facet_wrap(~ day,nrow=2)
ggplot(data=data,mapping=aes(x=bact.green,y=prot.ab)) +
geom_point(mapping=aes(color=Treatment)) +
facet_wrap(~ day,nrow=2)
ggplot(data=data,mapping=aes(x=bact.green,y=prot.rich)) +
geom_point(mapping=aes(color=Treatment)) +
facet_wrap(~ day,nrow=2)
ggplot(data=data,mapping=aes(x=Treatment,y=prot.rich)) +
geom_boxplot(mapping=aes(color=Treatment)) +
facet_wrap(~ Size,nrow=2)
ggplot(data=data,mapping=aes(x=Treatment,y=prot.ab)) +
geom_boxplot(mapping=aes(color=Treatment)) +
facet_wrap(~ Size,nrow=2)
ggplot(data=data,mapping=aes(x=Treatment,y=prot.ab)) +
geom_boxplot(mapping=aes(color=Treatment)) +
facet_wrap(~ Size,nrow=2)
ggplot(data=data,mapping=aes(x=Treatment,y=prot.ab)) +
geom_boxplot(mapping=aes(color=Treatment)) +
facet_wrap(~ Size,nrow=2)
##################
# Ordination (temporal trends in community structure)
##################
data$Treat.Size <- interaction(data$Treatment,data$Size)
data$Treat.Day <- interaction(data$Treatment,data$day)
data$Treat.Size.Day <- interaction(data$Treatment,data$Size,data$day)
#Place vars of interest into vectors for each component of ordination
SP <- c("Rot","Spi","Ble","Pca","Col","Chi","Tet","Other") #comm matrix
ENV <- c("day.cont","centrality","Size","dist.outlet","Treatment","Treat.Size","Treat.Size.Day") #Constrains
CONT <- c("day") #Effect to partial out
#Filter data as wanted (for bacteria need to use only rep A and B)
X <- data %>%
filter(day!=0 & Replicate %in% c("A","B","C","D")) %>%
mutate(Treatment = as.factor(Treatment),
day = factor(X$day,levels=c("0","7","15","21","29")),
day.cont = log(as.numeric(as.character(day))),
Size = as.ordered(Size),
centrality = as.numeric(as.character(centrality)),
dist.outlet = as.numeric(as.character(dist.outlet)))
#Create matrices for analyses
C <- decostand(X[,SP],"hell")
E <- X[,ENV]
Z <- as.matrix(X[,CONT])
rm(list=ls())
to.data <- "./data/"
to.script <- "./scripts/"
to.output <- "./output/"
to.figs <- "./figs/"
to.R <- "./output/"
##################
#Load data in R environment
##################
data = readRDS(paste0(to.output,"cl.data.RDS"))
data$Treat.Size <- interaction(data$Treatment,data$Size)
data$Treat.Day <- interaction(data$Treatment,data$day)
data$Treat.Size.Day <- interaction(data$Treatment,data$Size,data$day)
#Place vars of interest into vectors for each component of ordination
SP <- c("Rot","Spi","Ble","Pca","Col","Chi","Tet","Other") #comm matrix
ENV <- c("day.cont","centrality","Size","dist.outlet","Treatment","Treat.Size","Treat.Size.Day") #Constrains
CONT <- c("day") #Effect to partial out
#Filter data as wanted (for bacteria need to use only rep A and B)
X <- data %>%
filter(day!=0 & Replicate %in% c("A","B","C","D")) %>%
mutate(Treatment = as.factor(Treatment),
day = factor(X$day,levels=c("0","7","15","21","29")),
day.cont = log(as.numeric(as.character(day))),
Size = as.ordered(Size),
centrality = as.numeric(as.character(centrality)),
dist.outlet = as.numeric(as.character(dist.outlet)))
X <- data %>%
filter(day!=0 & Replicate %in% c("A","B","C","D")) %>%
mutate(Treatment = as.factor(Treatment),
day = factor(day,levels=c("0","7","15","21","29")),
day.cont = log(as.numeric(as.character(day))),
Size = as.ordered(Size),
centrality = as.numeric(as.character(centrality)),
dist.outlet = as.numeric(as.character(dist.outlet)))
#Create matrices for analyses
C <- decostand(X[,SP],"hell")
E <- X[,ENV]
Z <- as.matrix(X[,CONT])
########## REDUNDANCY ANALYSIS (RDA)
rda.mod <- rda(C ~ ., as.data.frame(E))
#rda.mod <- rda(C ~ X$Treatment + X$Size + X$Treat.Size + X$Treat.Size.Day + X$centrality +  X$dist.outlet + X$day.cont + Condition(Z))
rda.mod
rm(list=ls())
library(brewer)
knit_with_parameters('~/Documents/Research/1.Projects/Eawag/Projects/8.Blue-Green/BlueGreen/Overview.Rmd')
