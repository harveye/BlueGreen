#colnames(bind.out) <- c("time","size","LRR","species","CI_upper","CI_lower")
LRR_Res_protist <- rbind.data.frame(LRR_Res_protist,bind.out_Res_protist)
}
#Data calculated later in the document (added here for plotting purpose only - see below)
LRR_bact_green <- data.frame(species="Bact (green)",LRR=0.2313328,CI_upper=0.3173062,CI_lower=0.1453594)
LRR_Res_protist <- rbind(LRR_Res_protist,LRR_bact_green)
LRR_Res_protist
#Create output file
LRR_Res_Vol_protist <- data.frame(size=numeric(0),species=character(0),LRR=numeric(0),CI_upper=numeric(0),CI_lower=numeric(0))
#Loop for each species
for(i in 1:length(SP)) {
# Extract info for SP[i] and summarise data
D_Res_Vol_protist <- data %>%
filter(day !=0) %>%
select(SP[i],day, Treatment, Replicate, Size, centrality, degree, dist.outlet) %>%
mutate(Treatment = as.factor(Treatment),
Replicate = as.factor(Replicate),
Size = as.factor(Size))  %>%
Rmisc::summarySE(.,measurevar = SP[i], groupvars = c("Treatment","Size"))
LRR.7 <- log(D_Res_Vol_protist[1,4]) - log(D_Res_Vol_protist[5,4])
LRR.13 <- log(D_Res_Vol_protist[2,4]) - log(D_Res_Vol_protist[6,4])
LRR.22 <- log(D_Res_Vol_protist[3,4]) - log(D_Res_Vol_protist[7,4])
LRR.45 <- log(D_Res_Vol_protist[4,4]) - log(D_Res_Vol_protist[8,4])
LRR <- rbind(LRR.7,LRR.13,LRR.22,LRR.45)
SE_LRR.7 <- sqrt( (D_Res_Vol_protist$se[1]^2/D_Res_Vol_protist[1,4]^2) + (D_Res_Vol_protist$se[5]^2/D_Res_Vol_protist[5,4]^2) )
SE_LRR.13 <- sqrt( (D_Res_Vol_protist$se[2]^2/D_Res_Vol_protist[2,4]^2) + (D_Res_Vol_protist$se[6]^2/D_Res_Vol_protist[6,4]^2) )
SE_LRR.22 <- sqrt( (D_Res_Vol_protist$se[3]^2/D_Res_Vol_protist[3,4]^2) + (D_Res_Vol_protist$se[7]^2/D_Res_Vol_protist[7,4]^2) )
SE_LRR.45 <- sqrt( (D_Res_Vol_protist$se[4]^2/D_Res_Vol_protist[4,4]^2) + (D_Res_Vol_protist$se[8]^2/D_Res_Vol_protist[8,4]^2) )
SE_LRR <- rbind(SE_LRR.7,SE_LRR.13,SE_LRR.22,SE_LRR.45)
CI_upper.7 <- LRR.7 + 1.96*SE_LRR.7
CI_upper.13 <- LRR.13 + 1.96*SE_LRR.13
CI_upper.22 <- LRR.22 + 1.96*SE_LRR.22
CI_upper.45 <- LRR.45 + 1.96*SE_LRR.45
CI_upper <- rbind(CI_upper.7,CI_upper.13,CI_upper.22,CI_upper.45)
CI_lower.7 <- LRR.7 - 1.96*SE_LRR.7
CI_lower.13 <- LRR.13 - 1.96*SE_LRR.13
CI_lower.22 <- LRR.22 - 1.96*SE_LRR.22
CI_lower.45 <- LRR.45 - 1.96*SE_LRR.45
CI_lower <- rbind(CI_lower.7,CI_lower.13,CI_lower.22,CI_lower.45)
species <- rep(SP[i],4)
size <- unique(D_Res_Vol_protist$Size)
bind.out_Res_Vol_protist <- data.frame(size,species,LRR,CI_upper,CI_lower)
#colnames(bind.out) <- c("time","size","LRR","species","CI_upper","CI_lower")
LRR_Res_Vol_protist <- rbind.data.frame(LRR_Res_Vol_protist,bind.out_Res_Vol_protist)
}
LRR_Res_Vol_protist
fig_dat_Res_protist <- LRR_Res_protist %>%
filter(species != "Other")
colvec2 <- c(colvec,"black")
ggplot(fig_dat_Res_protist,mapping=aes(x=species,y=LRR)) + coord_cartesian(ylim = c(-0.8,0.5)) +
xlab("Species") + ylab("Effect size (log ratio of means)") +
geom_rect(fill="darkgreen",alpha=0.05, xmin=7.9, xmax=8.1, ymin=-Inf, ymax=Inf) +
geom_errorbar(aes(ymin= CI_lower, ymax= CI_upper, colour=species),linetype=1,width=0, show.legend = F) +
geom_point(aes(colour=species), show.legend=F) +
geom_hline(yintercept=0,lty=2) +
annotate("text", x=1, y=0.5,label="log(R+/R-) > 0",size=2.5,colour=colvec.R[1]) +
annotate("text", x=1, y=-0.8,label="log(R+/R-) < 0",size=2.5,colour=colvec.R[2]) + theme_classic() + scale_color_manual(values=colvec2)
pd <- position_dodge(0.6)
output_Res_Vol_protist <- LRR_Res_Vol_protist  %>%
filter(species != "Other")
ggplot(output_Res_Vol_protist,mapping=aes(x=size,y=LRR)) + coord_cartesian(ylim = c(-1.5,0.7)) +
xlab("Patch volume (mL)") + ylab("Effect size (log ratio of means)") +
geom_rect(fill="gray",alpha=0.05, xmin=0.7, xmax=1.3, ymin=-Inf, ymax=Inf) +
geom_rect(fill="gray",alpha=0.05, xmin=1.7, xmax=2.3, ymin=-Inf, ymax=Inf) +
geom_rect(fill="gray",alpha=0.05, xmin=2.7, xmax=3.3, ymin=-Inf, ymax=Inf) +
geom_rect(fill="gray",alpha=0.05, xmin=3.7, xmax=4.3, ymin=-Inf, ymax=Inf) +
geom_errorbar(aes(ymin=CI_lower, ymax=CI_upper,colour=species), position=pd, width=0) +
geom_point(aes(colour=species),position=pd) +
geom_hline(yintercept=0,lty=2) +
annotate("text", x=0.7, y=0.7,label="log(R+/R-) > 0",size=2.5,colour=colvec.R[1]) +
annotate("text", x=0.7, y=-1.5,label="log(R+/R-) < 0",size=2.5,colour=colvec.R[2]) +
annotate("text", x=1, y=-1.1,label='N=680',size=2.5,colour="black",fontface=2) +
annotate("text", x=2, y=-1.1,label='N=272',size=2.5,colour="black",fontface=2) +
annotate("text", x=3, y=-1.1,label='N=112',size=2.5,colour="black",fontface=2) +
annotate("text", x=4, y=-1.1,label='N=88',size=2.5,colour="black",fontface=2) +
theme_classic() + scale_color_manual(values=colvec)
##################
#Load data in R environment
##################
library(tidyverse)
library(vegan)
library(RColorBrewer)
library(gridExtra)
library(nlme)
library(scales)
##################
#Directory paths
##################
to.data <- "./data/"
to.script <- "./scripts/"
to.output <- "./output/"
to.figs <- "./figs/"
to.R <- "./output/"
##################
#Load data in R environment
##################
data = readRDS(paste0(to.output,"cl.data.RDS"))
SP <- c("Rot","Spi","Ble","Pca","Col","Chi","Tet") #comm matrix
##################
#Set colour gradient for each species
##################
colvec <- brewer.pal(7,"Set1")
##################
# Ordination (temporal trends in community structure)
##################
#Create interaction variable
data$Treat.Size <- interaction(data$Treatment,data$Size)
data$Treat.Day <- interaction(data$Treatment,data$day)
data$Treat.Size.Day <- interaction(data$Treatment,data$Size,data$day)
#Place vars of interest into vectors for each component of ordination
SP <- c("Rot","Spi","Ble","Pca","Col","Chi","Tet") #comm matrix
ENV <- c("day.cont","centrality","Size","dist.outlet","Treatment","Treat.Size","Treat.Size.Day") #Constrains
CONT <- c("Replicate") #Effect to partial out
#Filter data as wanted (for bacteria need to use only rep A and B)
X <- data %>%
filter(day!=0 & Replicate %in% c("A","B","C","D")) %>%
mutate(Treatment = as.factor(Treatment),
day = factor(day,levels=c("0","7","15","21","29")),
day.cont = as.numeric(as.character(day)),
Size = as.numeric(as.character(Size)),
centrality = as.numeric(as.character(centrality)),
dist.outlet = as.numeric(as.character(dist.outlet)))
#Create matrices for analyses
C <- decostand(X[,SP],"hell")
E <- X[,ENV]
Z <- as.matrix(X[,CONT])
# Filter data (bacteria were only measured for replicates A and B)
X.bact <- data %>%
filter(day!=0 & Replicate %in% c("A","B")) %>%
mutate(Treatment = as.factor(Treatment),
day = factor(day,levels=c("7","15","21","29")),
day.cont = log(as.numeric(as.character(day))),
Size = as.numeric(as.character(Size)),
centrality = as.numeric(as.character(centrality)),
dist.outlet = as.numeric(as.character(dist.outlet)))
X.prot <- data %>%
filter(day!=0 & Replicate %in% c("A","B","C","D")) %>%
mutate(Treatment = as.factor(Treatment),
day = factor(day,levels=c("7","15","21","29")),
day.cont = log(as.numeric(as.character(day))),
Size = as.numeric(as.character(Size)),
centrality = as.numeric(as.character(centrality)),
dist.outlet = as.numeric(as.character(dist.outlet)))
X.prot
hist(X.prot$prot.rich)
(X.prot$prot.rich)
mean(X.prot$prot.rich[X.prot$Treatment=="Connected"])
mean(X.prot$prot.ab[X.prot$Treatment=="Connected"])
#Run model (no log transformation based on histogramm of residuals)
Mod2 <- nlme:::lme(prot.ab ~ Treatment*Size*day.cont,
random = ~ 1|Replicate, data=X.prot,
method="ML",control=lmeControl(optimMethod="BFGS",maxIter=100,opt="optim"))
summary(Mod2)$tTable
#Run model (no log transformation based on histogramm of residuals)
Mod2 <- nlme:::lme(prot.ab ~ Treatment*Size*day.cont,
random = ~ 1, data=X.prot,
method="ML",control=lmeControl(optimMethod="BFGS",maxIter=100,opt="optim"))
#Run model (no log transformation based on histogramm of residuals)
Mod2 <- nlme:::lme(prot.ab ~ Treatment*Size*day.cont,
random = ~ 1|, data=X.prot,
#Run model (no log transformation based on histogramm of residuals)
Mod2 <- nlme:::lme(prot.ab ~ Treatment*Size*day.cont,
random = ~ 1|1, data=X.prot,
method="ML",control=lmeControl(optimMethod="BFGS",maxIter=100,opt="optim"))
#Run model (no log transformation based on histogramm of residuals)
Mod2 <- nlme:::lme(prot.ab ~ Treatment*Size*day.cont,
random = ~ 1|Replicate, data=X.prot,
method="ML",control=lmeControl(optimMethod="BFGS",maxIter=100,opt="optim"))
summary(Mod2)$tTable
##################
#Load data in R environment
##################
library(tidyverse)
library(vegan)
library(RColorBrewer)
library(gridExtra)
library(nlme)
library(scales)
##################
#Directory paths
##################
to.data <- "./data/"
to.script <- "./scripts/"
to.output <- "./output/"
to.figs <- "./figs/"
to.R <- "./output/"
##################
#Load data in R environment
##################
data = readRDS(paste0(to.output,"cl.data.RDS"))
SP <- c("Rot","Spi","Ble","Pca","Col","Chi","Tet") #comm matrix
##################
#Set colour gradient for each species
##################
colvec <- brewer.pal(7,"Set1")
##################
# Ordination (temporal trends in community structure)
##################
#Create interaction variable
data$Treat.Size <- interaction(data$Treatment,data$Size)
data$Treat.Day <- interaction(data$Treatment,data$day)
data$Treat.Size.Day <- interaction(data$Treatment,data$Size,data$day)
#Place vars of interest into vectors for each component of ordination
SP <- c("Rot","Spi","Ble","Pca","Col","Chi","Tet") #comm matrix
ENV <- c("day.cont","centrality","Size","dist.outlet","Treatment","Treat.Size","Treat.Size.Day") #Constrains
CONT <- c("Replicate") #Effect to partial out
#Filter data as wanted (for bacteria need to use only rep A and B)
X <- data %>%
filter(day!=0 & Replicate %in% c("A","B","C","D")) %>%
mutate(Treatment = as.factor(Treatment),
day = factor(day,levels=c("0","7","15","21","29")),
day.cont = as.numeric(as.character(day)),
Size = as.numeric(as.character(Size)),
centrality = as.numeric(as.character(centrality)),
dist.outlet = as.numeric(as.character(dist.outlet)))
#Create matrices for analyses
C <- decostand(X[,SP],"hell")
E <- X[,ENV]
Z <- as.matrix(X[,CONT])
rda.mod <- rda(C ~ ., as.data.frame(E))
rda.mod
summary(rda.mod)$concont
brewer.pal
colvec.R <- brewer.pal(3,"Dark2")
ordiplot(rda.mod,display="site",type="n",xlim=c(-1.5,1.5))
points(rda.mod, display="site", cex=0.5,pch=21,alpha=0.5,col=alpha(colvec.R[X$Treatment],0.6))
points(rda.mod, display="cn", col="blue",cex=0.0000001)
text(rda.mod, display="sp", col=colvec,face=2,cex=0.8)
legend("bottomleft",legend=levels(X$Treatment),col=colvec.R,pch=16,bty="n",cex=0.5)
ordiplot(rda.mod,display="site",type="n",xlim=c(-1.5,1.5))
points(rda.mod, display="site", cex=0.5,pch=21,col=alpha(colvec.R[X$Treatment],0.6))
points(rda.mod, display="cn", col="blue",cex=0.0000001)
text(rda.mod, display="sp", col=colvec,cex=0.8)
legend("bottomleft",legend=levels(X$Treatment),col=colvec.R,pch=16,bty="n",cex=0.5)
ordiplot(rda.mod,display="site",type="n",xlim=c(-1.5,1.5))
points(rda.mod, display="site", cex=0.5,pch=21,col=alpha(colvec.R[X$Treatment],0.6))
points(rda.mod, display="cn", col="blue",cex=0.0000001)
text(rda.mod, display="sp", col=colvec,cex=0.8)
legend("bottomleft",legend=levels(X$Treatment),col=colvec.R,pch=16,bty="n",cex=0.5)
?text()
text(x=-1.0,y=-0.3),"T",col="darkblue",cex=0.8)
text(x=-1.0,y=-0.3,"T",col="darkblue",cex=0.8)
text(x=-1.0,y=-0.3,"Taaaa",col="darkblue",cex=0.8)
text(x=-1.0,y=-0.6,"Taaaa",col="darkblue",cex=0.8)
text(x=-1.0,y=-0.7,"Taaaa",col="darkblue",cex=0.8)
text(x=-1.0,y=-0.7,"T",col="blue",cex=0.8)
ordiplot(rda.mod,display="site",type="n",xlim=c(-1.5,1.5))
points(rda.mod, display="site", cex=0.5,pch=21,col=alpha(colvec.R[X$Treatment],0.6))
points(rda.mod, display="cn", col="blue",cex=0.0000001)
text(rda.mod, display="sp", col=colvec,cex=0.8)
text(x=-1.0,y=-0.7,"T",col="blue",cex=0.8)
text(x=-0.5,y=-0.5,"T",col="blue",cex=0.8)
text(x=-0.5,y=0.5,"T",col="blue",cex=0.8)
text(x=-0.5,y=0.6,"T",col="blue",cex=0.8)
text(x=-0.5,y=0.8,"T",col="blue",cex=0.8)
text(x=-0.5,y=0.7,"T",col="blue",cex=0.8)
text(x=-0.55,y=0.7,"T",col="blue",cex=0.8)
text(x=-0.45,y=0.7,"T",col="blue",cex=0.8)
text(x=-0.45,y=0.72,"T",col="blue",cex=0.8)
text(x=-0.45,y=0.75,"T",col="blue",cex=0.8)
text(x=-0.45,y=0.78,"T",col="blue",cex=0.8)
text(x=-0.40,y=0.75,"T",col="blue",cex=0.8)
text(x=-0.42,y=0.75,"T",col="blue",cex=0.8)
ordiplot(rda.mod,display="site",type="n",xlim=c(-1.5,1.5))
points(rda.mod, display="site", cex=0.5,pch=21,col=alpha(colvec.R[X$Treatment],0.6))
points(rda.mod, display="cn", col="blue",cex=0.0000001)
text(rda.mod, display="sp", col=colvec,cex=0.8)
text(x=-1.0,y=-0.7,"T",col="blue",cex=0.8)
text(x=-0.42,y=0.75,"C",col="blue",cex=0.8)
text(x=-0.30,y=0.75,"V",col="blue",cex=0.8)
text(x=-0.35,y=0.75,"V",col="blue",cex=0.8)
text(x=-0.35,y=0.78,"V",col="blue",cex=0.8)
ordiplot(rda.mod,display="site",type="n",xlim=c(-1.5,1.5))
points(rda.mod, display="site", cex=0.5,pch=21,col=alpha(colvec.R[X$Treatment],0.6))
points(rda.mod, display="cn", col="blue",cex=0.0000001)
text(rda.mod, display="sp", col=colvec,cex=0.8)
text(x=-1.0,y=-0.7,"T",col="blue",cex=0.8)
text(x=-0.42,y=0.75,"C",col="blue",cex=0.8)
text(x=-0.35,y=0.78,"V",col="blue",cex=0.8)
text(x=-0.35,y=0.79,"V",col="blue",cex=0.8)
ordiplot(rda.mod,display="site",type="n",xlim=c(-1.5,1.5))
points(rda.mod, display="site", cex=0.5,pch=21,col=alpha(colvec.R[X$Treatment],0.6))
points(rda.mod, display="cn", col="blue",cex=0.0000001)
text(rda.mod, display="sp", col=colvec,cex=0.8)
text(x=-1.0,y=-0.7,"T",col="blue",cex=0.8)
text(x=-0.42,y=0.76,"C",col="blue",cex=0.8)
text(x=-0.35,y=0.79,"V",col="blue",cex=0.8)
text(x=0.35,y=-0.7,"D",col="blue",cex=0.8)
text(x=0.35,y=-0.72,"D",col="blue",cex=0.8)
ordiplot(rda.mod,display="site",type="n",xlim=c(-1.5,1.5))
points(rda.mod, display="site", cex=0.5,pch=21,col=alpha(colvec.R[X$Treatment],0.6))
points(rda.mod, display="cn", col="blue",cex=0.0000001)
text(rda.mod, display="sp", col=colvec,cex=0.8)
text(x=-1.0,y=-0.7,"T",col="blue",cex=0.8)
text(x=-0.42,y=0.76,"C",col="blue",cex=0.8)
text(x=-0.35,y=0.79,"V",col="blue",cex=0.8)
text(x=0.35,y=-0.72,"D",col="blue",cex=0.8)
text(x=0.35,y=-0.75,"D",col="blue",cex=0.8)
text(x=0.35,y=-0.73,"D",col="blue",cex=0.8)
text(x=0.36,y=-0.73,"D",col="blue",cex=0.8)
text(x=0.37,y=-0.73,"D",col="blue",cex=0.8)
text(x=0.38,y=-0.73,"D",col="blue",cex=0.8)
text(x=0.40,y=-0.73,"D",col="blue",cex=0.8)
ordiplot(rda.mod,display="site",type="n",xlim=c(-1.5,1.5))
points(rda.mod, display="site", cex=0.5,pch=21,col=alpha(colvec.R[X$Treatment],0.6))
points(rda.mod, display="cn", col="blue",cex=0.0000001)
text(rda.mod, display="sp", col=colvec,cex=0.8)
text(x=-1.0,y=-0.7,"T",col="blue",cex=0.8)
text(x=-0.42,y=0.76,"C",col="blue",cex=0.8)
text(x=-0.35,y=0.79,"V",col="blue",cex=0.8)
text(x=0.39,y=-0.73,"D",col="blue",cex=0.8)
legend("bottomleft",legend=levels(X$Treatment),col=colvec.R,pch=16,bty="n",cex=0.5)
colvec.R <- brewer.pal(3,"Dark2")
##Plot
ordiplot(rda.mod,display="site",type="n",xlim=c(-1.5,1.5))
points(rda.mod, display="site", cex=0.5,pch=21,col=alpha(colvec.R[X$Treatment],0.6))
points(rda.mod, display="cn", col="blue",cex=0.0000001)
text(rda.mod, display="sp", col=colvec,cex=0.8)
text(x=-1.0,y=-0.7,"T",col="blue",cex=0.8)
text(x=-0.42,y=0.76,"C",col="blue",cex=0.8)
text(x=-0.35,y=0.79,"V",col="blue",cex=0.8)
text(x=0.39,y=-0.73,"D",col="blue",cex=0.8)
legend("bottomleft",legend=levels(X$Treatment),col=colvec.R,pch=16,bty="n",cex=0.5)
colvec.R <- brewer.pal(3,"Dark2")
##Plot
ordiplot(rda.mod,display="site",type="n",xlim=c(-1.5,1.5))
points(rda.mod, display="site", cex=0.5,pch=21,col=alpha(colvec.R[X$Treatment],0.6))
points(rda.mod, display="cn", col="blue",cex=0.0000001)
text(rda.mod, display="sp", col=colvec,cex=0.8)
text(x=-1.0,y=-0.7,"T",col="blue",cex=0.8)
text(x=-0.42,y=0.76,"C",col="blue",cex=0.8)
text(x=-0.35,y=0.79,"V",col="blue",cex=0.8)
text(x=0.39,y=-0.73,"D",col="blue",cex=0.8)
legend("bottomleft",legend=levels(X$Treatment),col=colvec.R,pch=16,bty="n",cex=0.5)
colvec.R <- brewer.pal(3,"Dark2")
##Plot
ordiplot(rda.mod,display="site",type="n",xlim=c(-1.5,1.5))
points(rda.mod, display="site", cex=0.5,pch=21,col=alpha(colvec.R[X$Treatment],0.6))
points(rda.mod, display="cn", col="blue",cex=0.0000001)
text(rda.mod, display="sp", col=colvec,cex=0.8)
text(x=-0.8,y=-0.7,"T",col="blue",cex=0.8)
text(x=-0.42,y=0.76,"C",col="blue",cex=0.8)
text(x=-0.35,y=0.79,"V",col="blue",cex=0.8)
text(x=0.39,y=-0.73,"D",col="blue",cex=0.8)
legend("bottomleft",legend=levels(X$Treatment),col=colvec.R,pch=16,bty="n",cex=0.5)
colvec.R <- brewer.pal(3,"Dark2")
##Plot
ordiplot(rda.mod,display="site",type="n",xlim=c(-1.5,1.5))
points(rda.mod, display="site", cex=0.5,pch=21,col=alpha(colvec.R[X$Treatment],0.6))
points(rda.mod, display="cn", col="blue",cex=0.0000001)
text(rda.mod, display="sp", col=colvec,cex=0.8)
text(x=-0.8,y=-0.4,"T",col="blue",cex=0.8)
text(x=-0.42,y=0.76,"C",col="blue",cex=0.8)
text(x=-0.35,y=0.79,"V",col="blue",cex=0.8)
text(x=0.39,y=-0.73,"D",col="blue",cex=0.8)
legend("bottomleft",legend=levels(X$Treatment),col=colvec.R,pch=16,bty="n",cex=0.5)
colvec.R <- brewer.pal(3,"Dark2")
##Plot
ordiplot(rda.mod,display="site",type="n",xlim=c(-1.5,1.5))
points(rda.mod, display="site", cex=0.5,pch=21,col=alpha(colvec.R[X$Treatment],0.6))
points(rda.mod, display="cn", col="blue",cex=0.0000001)
text(rda.mod, display="sp", col=colvec,cex=0.8)
text(x=-0.8,y=-0.6,"T",col="blue",cex=0.8)
text(x=-0.42,y=0.76,"C",col="blue",cex=0.8)
text(x=-0.35,y=0.79,"V",col="blue",cex=0.8)
text(x=0.39,y=-0.73,"D",col="blue",cex=0.8)
legend("bottomleft",legend=levels(X$Treatment),col=colvec.R,pch=16,bty="n",cex=0.5)
colvec.R <- brewer.pal(3,"Dark2")
##Plot
ordiplot(rda.mod,display="site",type="n",xlim=c(-1.5,1.5))
points(rda.mod, display="site", cex=0.5,pch=21,col=alpha(colvec.R[X$Treatment],0.6))
points(rda.mod, display="cn", col="blue",cex=0.0000001)
text(rda.mod, display="sp", col=colvec,cex=0.8)
text(x=-0.8,y=-0.65,"T",col="blue",cex=0.8)
text(x=-0.42,y=0.76,"C",col="blue",cex=0.8)
text(x=-0.35,y=0.79,"V",col="blue",cex=0.8)
text(x=0.39,y=-0.73,"D",col="blue",cex=0.8)
legend("bottomleft",legend=levels(X$Treatment),col=colvec.R,pch=16,bty="n",cex=0.5)
colvec.R <- brewer.pal(3,"Dark2")
##Plot
ordiplot(rda.mod,display="site",type="n",xlim=c(-1.5,1.5))
points(rda.mod, display="site", cex=0.5,pch=21,col=alpha(colvec.R[X$Treatment],0.6))
points(rda.mod, display="cn", col="blue",cex=0.0000001)
text(rda.mod, display="sp", col=colvec,cex=0.8)
text(x=-0.85,y=-0.6,"T",col="blue",cex=0.8)
text(x=-0.42,y=0.76,"C",col="blue",cex=0.8)
text(x=-0.35,y=0.79,"V",col="blue",cex=0.8)
text(x=0.39,y=-0.73,"D",col="blue",cex=0.8)
legend("bottomleft",legend=levels(X$Treatment),col=colvec.R,pch=16,bty="n",cex=0.5)
colvec.R <- brewer.pal(3,"Dark2")
##Plot
ordiplot(rda.mod,display="site",type="n",xlim=c(-1.5,1.5))
points(rda.mod, display="site", cex=0.5,pch=21,col=alpha(colvec.R[X$Treatment],0.6))
points(rda.mod, display="cn", col="blue",cex=0.0000001)
text(rda.mod, display="sp", col=colvec,cex=0.8)
text(x=-0.85,y=-0.6,"T",col="blue",cex=0.8)
text(x=-0.42,y=0.6,"C",col="blue",cex=0.8)
text(x=-0.35,y=0.79,"V",col="blue",cex=0.8)
text(x=0.39,y=-0.73,"D",col="blue",cex=0.8)
legend("bottomleft",legend=levels(X$Treatment),col=colvec.R,pch=16,bty="n",cex=0.5)
colvec.R <- brewer.pal(3,"Dark2")
##Plot
ordiplot(rda.mod,display="site",type="n",xlim=c(-1.5,1.5))
points(rda.mod, display="site", cex=0.5,pch=21,col=alpha(colvec.R[X$Treatment],0.6))
points(rda.mod, display="cn", col="blue",cex=0.0000001)
text(rda.mod, display="sp", col=colvec,cex=0.8)
text(x=-0.85,y=-0.6,"T",col="blue",cex=0.8)
text(x=-0.38,y=0.6,"C",col="blue",cex=0.8)
text(x=-0.35,y=0.79,"V",col="blue",cex=0.8)
text(x=0.39,y=-0.73,"D",col="blue",cex=0.8)
legend("bottomleft",legend=levels(X$Treatment),col=colvec.R,pch=16,bty="n",cex=0.5)
colvec.R <- brewer.pal(3,"Dark2")
##Plot
ordiplot(rda.mod,display="site",type="n",xlim=c(-1.5,1.5))
points(rda.mod, display="site", cex=0.5,pch=21,col=alpha(colvec.R[X$Treatment],0.6))
points(rda.mod, display="cn", col="blue",cex=0.0000001)
text(rda.mod, display="sp", col=colvec,cex=0.8)
text(x=-0.85,y=-0.6,"T",col="blue",cex=0.8)
text(x=-0.35,y=0.6,"C",col="blue",cex=0.8)
text(x=-0.35,y=0.79,"V",col="blue",cex=0.8)
text(x=0.39,y=-0.73,"D",col="blue",cex=0.8)
legend("bottomleft",legend=levels(X$Treatment),col=colvec.R,pch=16,bty="n",cex=0.5)
colvec.R <- brewer.pal(3,"Dark2")
##Plot
ordiplot(rda.mod,display="site",type="n",xlim=c(-1.5,1.5))
points(rda.mod, display="site", cex=0.5,pch=21,col=alpha(colvec.R[X$Treatment],0.6))
points(rda.mod, display="cn", col="blue",cex=0.0000001)
text(rda.mod, display="sp", col=colvec,cex=0.8)
text(x=-0.85,y=-0.6,"T",col="blue",cex=0.8)
text(x=-0.35,y=0.6,"C",col="blue",cex=0.8)
text(x=-0.35,y=0.65,"V",col="blue",cex=0.8)
text(x=0.39,y=-0.73,"D",col="blue",cex=0.8)
legend("bottomleft",legend=levels(X$Treatment),col=colvec.R,pch=16,bty="n",cex=0.5)
colvec.R <- brewer.pal(3,"Dark2")
##Plot
ordiplot(rda.mod,display="site",type="n",xlim=c(-1.5,1.5))
points(rda.mod, display="site", cex=0.5,pch=21,col=alpha(colvec.R[X$Treatment],0.6))
points(rda.mod, display="cn", col="blue",cex=0.0000001)
text(rda.mod, display="sp", col=colvec,cex=0.8)
text(x=-0.85,y=-0.6,"T",col="blue",cex=0.8)
text(x=-0.35,y=0.6,"C",col="blue",cex=0.8)
text(x=-0.32,y=0.65,"V",col="blue",cex=0.8)
text(x=0.39,y=-0.73,"D",col="blue",cex=0.8)
legend("bottomleft",legend=levels(X$Treatment),col=colvec.R,pch=16,bty="n",cex=0.5)
colvec.R <- brewer.pal(3,"Dark2")
##Plot
ordiplot(rda.mod,display="site",type="n",xlim=c(-1.5,1.5))
points(rda.mod, display="site", cex=0.5,pch=21,col=alpha(colvec.R[X$Treatment],0.6))
points(rda.mod, display="cn", col="blue",cex=0.0000001)
text(rda.mod, display="sp", col=colvec,cex=0.8)
text(x=-0.85,y=-0.6,"T",col="blue",cex=0.8)
text(x=-0.35,y=0.6,"C",col="blue",cex=0.8)
text(x=-0.30,y=0.65,"V",col="blue",cex=0.8)
text(x=0.39,y=-0.73,"D",col="blue",cex=0.8)
legend("bottomleft",legend=levels(X$Treatment),col=colvec.R,pch=16,bty="n",cex=0.5)
colvec.R <- brewer.pal(3,"Dark2")
##Plot
ordiplot(rda.mod,display="site",type="n",xlim=c(-1.5,1.5))
points(rda.mod, display="site", cex=0.5,pch=21,col=alpha(colvec.R[X$Treatment],0.6))
points(rda.mod, display="cn", col="blue",cex=0.0000001)
text(rda.mod, display="sp", col=colvec,cex=0.8)
text(x=-0.85,y=-0.6,"T",col="blue",cex=0.8)
text(x=-0.35,y=0.6,"C",col="blue",cex=0.8)
text(x=-0.30,y=0.65,"V",col="blue",cex=0.8)
text(x=0.39,y=-0.55,"D",col="blue",cex=0.8)
legend("bottomleft",legend=levels(X$Treatment),col=colvec.R,pch=16,bty="n",cex=0.5)
colvec.R <- brewer.pal(3,"Dark2")
##Plot
ordiplot(rda.mod,display="site",type="n",xlim=c(-1.5,1.5))
points(rda.mod, display="site", cex=0.5,pch=21,col=alpha(colvec.R[X$Treatment],0.6))
points(rda.mod, display="cn", col="blue",cex=0.0000001)
text(rda.mod, display="sp", col=colvec,cex=0.8)
text(x=-0.85,y=-0.6,"T",col="blue",cex=0.8)
text(x=-0.35,y=0.6,"C",col="blue",cex=0.8)
text(x=-0.30,y=0.65,"V",col="blue",cex=0.8)
text(x=0.30,y=-0.58,"D",col="blue",cex=0.8)
legend("bottomleft",legend=levels(X$Treatment),col=colvec.R,pch=16,bty="n",cex=0.5)
install.packages("colorspace")
library(colorspace)
pal <- choose_palette()
pal <- choose_palette()
##################
#Load data in R environment
##################
library(tidyverse)
library(vegan)
library(RColorBrewer)
library(gridExtra)
library(nlme)
library(scales)
##################
#Directory paths
##################
to.data <- "./data/"
to.script <- "./scripts/"
to.output <- "./output/"
to.figs <- "./figs/"
to.R <- "./output/"
##################
#Load data in R environment
##################
data = readRDS(paste0(to.output,"cl.data.RDS"))
SP <- c("Rot","Spi","Ble","Pca","Col","Chi","Tet") #comm matrix
##################
#Set colour gradient for each species
##################
colvec <- brewer.pal(7,"Set1")
?display.brewer.all()
display.brewer.all(type="qual", colorblindFriendly=T)
display.brewer.all(n=8,type="qual", colorblindFriendly=T)
display.brewer.pal(n=8,"set2")
display.brewer.pal(n=8,"Set2")
